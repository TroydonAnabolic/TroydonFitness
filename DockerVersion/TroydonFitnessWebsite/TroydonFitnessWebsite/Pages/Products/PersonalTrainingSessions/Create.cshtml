@page
@model TroydonFitnessWebsite.Pages.Products.PersonalTrainingSessions.CreateModel
@using TroydonFitnessWebsite.CustomSettings

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_ProductsLayout.cshtml";
}

<h1>Create</h1>

<h4>Personal Training</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PersonalTrainingVM.PersonalTrainingSessions" class="control-label"></label>
            </div>

            @*  This enables us to edit related data from other entities. *@
            <div class="form-group">
                <label asp-for="PersonalTrainingVM.Product" class="control-label"></label>
                <select asp-for="PersonalTrainingVM.ProductID" class="form-control"
                        asp-items="@Model.ProductTitleSL">
                    <option value="">-- Select Product --</option>
                </select>
                <span asp-validation-for="PersonalTrainingVM.ProductID" class="text-danger" />
            </div>

            @* Use drop down list to create the index value for accessing title value which will then add the correct name *@
            <div class="form-group">
                <label asp-for="PersonalTrainingVM.PersonalTrainingName" class="control-label"></label>
                <select asp-for="@Model.getIndexOfTitleList" class="form-control"
                        asp-items="@(
                            new SelectList(Model.displayProductTitles, "ProductID", "Title")
                            )">
                    <option value="" selected disabled>-- Select PT Name --</option>
                </select>
                <span asp-validation-for="PersonalTrainingVM.PersonalTrainingName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PersonalTrainingVM.Description" class="control-label"></label>
                <input asp-for="PersonalTrainingVM.Description" class="form-control" />
                <span asp-validation-for="PersonalTrainingVM.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PersonalTrainingVM.LengthOfRoutine" class="control-label"></label>
                @Html.DropDownListFor(x => x.PersonalTrainingVM.LengthOfRoutine, SelectListHelper.GetRoutineDuration(), "Select Duration", "{0:d\\:hh\\:mm}")
                <span asp-validation-for="PersonalTrainingVM.LengthOfRoutine" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    @Html.LabelFor(x => x.PersonalTrainingVM.PTSessionType) :
                    @Html.RadioButtonFor(x => x.PersonalTrainingVM.PTSessionType, "Strength") Strength
                    @Html.RadioButtonFor(x => x.PersonalTrainingVM.PTSessionType, "Hypertrophy") Hypertrophy
                    @Html.RadioButtonFor(x => x.PersonalTrainingVM.PTSessionType, "Endurance") Endurance
                    @Html.ValidationMessageFor(x => x.PersonalTrainingVM.PTSessionType)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    @Html.LabelFor(x => x.PersonalTrainingVM.ExperienceLevel) :
                    @Html.RadioButtonFor(x => x.PersonalTrainingVM.ExperienceLevel, "Beginner") Beginner
                    @Html.RadioButtonFor(x => x.PersonalTrainingVM.ExperienceLevel, "Intermediate") Intermediate
                    @Html.RadioButtonFor(x => x.PersonalTrainingVM.ExperienceLevel, "Advanced") Advanced
                    @Html.ValidationMessageFor(x => x.PersonalTrainingVM.ExperienceLevel)
                </label>
            </div>
            @* Add picture *@
        <div class="form-group">
            <label asp-for="PersonalTrainingVM.PtProductPicture" style="width: 100%;"></label>
            @*@if (@Model.PersonalTrainingVM.PtProductPicture != null)
            {
                <img id="ptProductPic" style="width:350px;height:350px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(Model.PersonalTrainingVM.PtProductPicture))">
            }*@
                <img id="ptProductPic" style="width:350px;height:350px; object-fit:cover" src="~/images/default-img.png">
            <input type="file"
                   accept=".png,.jpg,.jpeg,.gif,.tif"
                   asp-for="PersonalTrainingVM.PtProductPicture"
                   class="form-control"
                   style="border:0px!important;padding: 0px;padding-top: 10px;padding-bottom: 30px;"
                   onchange="document.getElementById('ptProductPic').src = window.URL.createObjectURL(this.files[0])" />   <!-- This line below allows current id element to show the newly uploaded pic-->
            <span asp-validation-for="PersonalTrainingVM.PtProductPicture" class="text-danger"></span>
        </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
